Type=Web
RBProjectVersion=2019.032
MinIDEVersion=20110400
OrigIDEVersion=20190320
Class=App;App.xojo_code;&h0000000045025FFF;&h0000000000000000;false
WebSession=Session;Session.xojo_code;&h0000000016A447FF;&h0000000000000000;false
WebView=WebPage1;WebPage1.xojo_code;&h0000000049174FFF;&h0000000000000000;false
BuildSteps=Build Automation;Build Automation.xojo_code;&h00000000220A4FFF;&h0000000000000000;false
WebView=itm;itm.xojo_code;&h00000000434B47FF;&h0000000000000000;false
WebStyle=Style1;Style1.xojo_code;&h00000000459DDFFF;&h0000000000000000;false
WebStyle=Style11;Style11.xojo_code;&h000000000D1DE7FF;&h0000000000000000;false
Class=cls_tree_node;cls_tree_node.xojo_code;&h000000005D237FFF;&h0000000000000000;false
Class=cls_treeDrawer;cls_treeDrawer.xojo_code;&h00000000706157FF;&h0000000000000000;false
DefaultWindow=WebPage1
MajorVersion=1
MinorVersion=0
SubVersion=0
NonRelease=0
Release=0
InfoVersion=
LongVersion=
ShortVersion=
WinCompanyName=Lars Lehmann
WinInternalName=
WinProductName=
WinFileDescription=
AutoIncrementVersionInformation=False
BuildFlags=&h8100
BuildLanguage=&h0
DebugLanguage=&h0
Region=
WindowsName=My Application.exe
MacCarbonMachName=My Application
LinuxX86Name=MyApplication
MacCreator=
MDI=0
MDICaption=
DefaultEncoding=&h0
AppIcon=web_container_tree.xojo_resources;&h0
OSXBundleID=com.larslehmann.myapp
DebuggerCommandLine=
UseGDIPlus=False
UseBuildsFolder=True
HiDPI=True
CopyRedistNextToWindowsEXE=False
IsWebProject=True
WebDebugPort=8080
WebLivePort=-1
WebSecurePort=-1
WebProtocol=0
WebLaunchString=Launching...
WebHTMLHeader=<!-- Include jQuery and the Connections plugin -->\n<script src\x3D\"https://code.jquery.com/jquery-latest.min.js\"></script>\n<script src\x3D\"https://code.jquery.com/ui/1.13.1/jquery-ui.min.js\"></script>\n<script>\n\n(function($) {\n  $.fn.connections \x3D function(options) {\n    if (options \x3D\x3D\x3D \"update\") {\n      return processConnections(update\x2C this);\n    } else if (options \x3D\x3D\x3D \"remove\") {\n      return processConnections(destroy\x2C this);\n    } else {\n      options \x3D $.extend(\n        true\x2C\n        {\n          borderClasses: {}\x2C\n          class: \"connection\"\x2C\n          css: {}\x2C\n          from: this\x2C\n          tag: \"connection\"\x2C\n          to: this\x2C\n          within: \":root\"\n        }\x2C\n        options\n      );\n      connect(options);\n      return this;\n    }\n  };\n\n  $.event.special.connections \x3D {\n    teardown: function(namespaces) {\n      processConnections(destroy\x2C $(this));\n    }\n  };\n\n  var connect \x3D function(options) {\n    var borderClasses \x3D options.borderClasses;\n    var tag \x3D options.tag;\n    var end1 \x3D $(options.from);\n    var end2 \x3D $(options.to);\n    var within \x3D $(options.within);\n    delete options.borderClasses;\n    delete options.tag;\n    delete options.from;\n    delete options.to;\n    delete options.within;\n    within.each(function() {\n      var container \x3D this;\n      var done \x3D new Array();\n      end1.each(function() {\n        var node \x3D this;\n        done.push(this);\n        end2.not(done).each(function() {\n          createConnection(\n            container\x2C\n            [node\x2C this]\x2C\n            tag\x2C\n            borderClasses\x2C\n            options\n          );\n        });\n      });\n    });\n  };\n\n  var createConnection \x3D function(\n    container\x2C\n    nodes\x2C\n    tag\x2C\n    borderClasses\x2C\n    options\n  ) {\n    var css \x3D $.extend({ position: \"absolute\" }\x2C options.css);\n    var connection \x3D $(\"<\" + tag + \"/>\"\x2C options).css(css);\n    connection.appendTo(container);\n\n    var border_w \x3D (connection.outerWidth() - connection.innerWidth()) / 2;\n    var border_h \x3D (connection.outerHeight() - connection.innerHeight()) / 2;\n\n    if (border_w <\x3D 0 && border_h <\x3D 0) {\n      border_w \x3D border_h \x3D 1;\n    }\n\n    var data \x3D {\n      borderClasses: borderClasses\x2C\n      border_h: border_h\x2C\n      border_w: border_w\x2C\n      node_from: $(nodes[0])\x2C\n      node_to: $(nodes[1])\x2C\n      nodes_dom: nodes\x2C\n      css: css\n    };\n\n    if (\"none\" \x3D\x3D\x3D connection.css(\"border-top-style\")) {\n      data.css.borderStyle \x3D \"solid\";\n    }\n    $.data(connection.get(0)\x2C \"connection\"\x2C data);\n    $.data(connection.get(0)\x2C \"connections\"\x2C [connection.get(0)]);\n    for (var i \x3D 0; i < 2; i++) {\n      var connections \x3D connection.add($.data(nodes[i]\x2C \"connections\")).get();\n      $.data(nodes[i]\x2C \"connections\"\x2C connections);\n      if (connections.length \x3D\x3D 1) {\n        $(nodes[i]).on(\"connections.connections\"\x2C false);\n      }\n    }\n    update(connection.get(0));\n  };\n\n  var destroy \x3D function(connection) {\n    var nodes \x3D $.data(connection\x2C \"connection\").nodes_dom;\n    for (var i \x3D 0; i < 2; i++) {\n      var connections \x3D $($.data(nodes[i]\x2C \"connections\"))\n        .not(connection)\n        .get();\n      $.data(nodes[i]\x2C \"connections\"\x2C connections);\n    }\n    $(connection).remove();\n  };\n\n  var getState \x3D function(data) {\n    data.rect_from \x3D data.nodes_dom[0].getBoundingClientRect();\n    data.rect_to \x3D data.nodes_dom[1].getBoundingClientRect();\n    var cached \x3D data.cache;\n    data.cache \x3D [\n      data.rect_from.top\x2C\n      data.rect_from.right\x2C\n      data.rect_from.bottom\x2C\n      data.rect_from.left\x2C\n      data.rect_to.top\x2C\n      data.rect_to.right\x2C\n      data.rect_to.bottom\x2C\n      data.rect_to.left\n    ];\n    data.hidden \x3D\n      0 \x3D\x3D\x3D (data.cache[0] | data.cache[1] | data.cache[2] | data.cache[3]) ||\n      0 \x3D\x3D\x3D (data.cache[4] | data.cache[5] | data.cache[6] | data.cache[7]);\n    data.unmodified \x3D true;\n    if (cached \x3D\x3D\x3D undefined) {\n      return (data.unmodified \x3D false);\n    }\n    for (var i \x3D 0; i < 8; i++) {\n      if (cached[i] !\x3D\x3D data.cache[i]) {\n        return (data.unmodified \x3D false);\n      }\n    }\n  };\n\n  var update \x3D function(connection) {\n    var data \x3D $.data(connection\x2C \"connection\");\n    getState(data);\n    if (data.unmodified) {\n      return;\n    }\n    var border_h \x3D data.border_h;\n    var border_w \x3D data.border_w;\n    var from \x3D data.rect_from;\n    var to \x3D data.rect_to;\n    var b \x3D (from.bottom + from.top) / 2;\n    var r \x3D (to.left + to.right) / 2;\n    var t \x3D (to.bottom + to.top) / 2;\n    var l \x3D (from.left + from.right) / 2;\n\n    var h \x3D [\"right\"\x2C \"left\"];\n    if (l > r) {\n      h \x3D [\"left\"\x2C \"right\"];\n      var x \x3D Math.max(r - border_w / 2\x2C Math.min(from.right\x2C to.right));\n      r \x3D l + border_w / 2;\n      l \x3D x;\n    } else {\n      l -\x3D border_w / 2;\n      r \x3D Math.min(r + border_w / 2\x2C Math.max(from.left\x2C to.left));\n    }\n    var v \x3D [\"bottom\"\x2C \"top\"];\n    if (t > b) {\n      v \x3D [\"top\"\x2C \"bottom\"];\n      var x \x3D Math.max(b - border_h / 2\x2C Math.min(from.bottom\x2C to.bottom));\n      b \x3D t + border_h / 2;\n      t \x3D x;\n    } else {\n      b \x3D Math.min(b\x2C Math.max(from.top\x2C to.top));\n      t -\x3D border_h / 2;\n    }\n    var width \x3D r - l;\n    var height \x3D b - t;\n    if (width < border_w) {\n      t \x3D Math.max(t\x2C Math.min(from.bottom\x2C to.bottom));\n      b \x3D Math.min(b\x2C Math.max(from.top\x2C to.top));\n      l \x3D Math.max(from.left\x2C to.left);\n      r \x3D Math.min(from.right\x2C to.right);\n      r \x3D l \x3D (l + r - border_w) / 2;\n    }\n    if (height < border_h) {\n      l \x3D Math.max(l\x2C Math.min(from.right\x2C to.right));\n      r \x3D Math.min(r\x2C Math.max(from.left\x2C to.left));\n      t \x3D Math.max(from.top\x2C to.top);\n      b \x3D Math.min(from.bottom\x2C to.bottom);\n      b \x3D t \x3D (t + b - border_h) / 2;\n    }\n    width \x3D r - l;\n    height \x3D b - t;\n    width <\x3D 0 && (border_h \x3D 0);\n    height <\x3D 0 && (border_w \x3D 0);\n    var style \x3D\n      \"border-\" +\n      v[0] +\n      \"-\" +\n      h[0] +\n      \"-radius: 0;\" +\n      \"border-\" +\n      v[0] +\n      \"-\" +\n      h[1] +\n      \"-radius: 0;\" +\n      \"border-\" +\n      v[1] +\n      \"-\" +\n      h[0] +\n      \"-radius: 0;\";\n    (border_h <\x3D 0 || border_w <\x3D 0) &&\n      (style +\x3D \"border-\" + v[1] + \"-\" + h[1] + \"-radius: 0;\");\n    if (data.hidden) {\n      style +\x3D \"display: none;\";\n    } else {\n      data.css[\"border-\" + v[0] + \"-width\"] \x3D 0;\n      data.css[\"border-\" + h[0] + \"-width\"] \x3D 0;\n      data.css[\"border-\" + v[1] + \"-width\"] \x3D border_h;\n      data.css[\"border-\" + h[1] + \"-width\"] \x3D border_w;\n      var current_rect \x3D connection.getBoundingClientRect();\n      data.css.left \x3D connection.offsetLeft + l - current_rect.left;\n      data.css.top \x3D connection.offsetTop + t - current_rect.top;\n      data.css.width \x3D width - border_w;\n      data.css.height \x3D height - border_h;\n    }\n    var bc \x3D data.borderClasses;\n    $(connection)\n      .removeClass(bc[v[0]])\n      .removeClass(bc[h[0]])\n      .addClass(bc[v[1]])\n      .addClass(bc[h[1]])\n      .attr(\"style\"\x2C style)\n      .css(data.css);\n  };\n\n  var processConnections \x3D function(method\x2C elements) {\n    return elements.each(function() {\n      var connections \x3D $.data(this\x2C \"connections\");\n      if (connections instanceof Array) {\n        for (var i \x3D 0\x2C len \x3D connections.length; i < len; i++) {\n          method(connections[i]);\n        }\n      }\n    });\n  };\n})(jQuery);\n\n\n</script>\n\n\n<style>\nconnection.connection {\n    border-radius: 15px;\n}\n</style>
WebDisconnectMessage=The application has gone off-line. Please try again later.
WebHostingIdentifier=
WebHostingAppName=MyApplication
LinuxBuildArchitecture=1
MacBuildArchitecture=1
OptimizationLevel=0
WindowsVersions={35138b9a-5d96-4fbd-8e2d-a2440225f93a}|{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}|{1f676c76-80e1-4239-95bb-83d0f6d0da78}|{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}
WindowsRunAs=0
